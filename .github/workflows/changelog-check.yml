name: "Release Validation"

on:
  pull_request:
    branches: [ main ]

jobs:
  validate-release:
    name: "Validate Release Requirements"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Make build scripts executable
        run: chmod +x build/*.sh

      - name: Check release requirements
        run: |
          echo "üîç Validating release requirements..."
          echo ""
          
          VALIDATION_FAILED=false
          
          # Get version that would be generated for this branch
          CURRENT_VERSION=$(bash build/version.sh)
          
          echo "Generated version for this branch: $CURRENT_VERSION"
          echo ""
          
          # Check if this PR targets main branch - all PRs to main should have changelog entries
          PR_BASE_BRANCH="${{ github.base_ref }}"
          if [ "$PR_BASE_BRANCH" = "main" ]; then
            echo "üéØ PR targets main branch - changelog validation required"
            
            # Check if CHANGELOG.md has been modified in this PR
            if git diff --name-only origin/main...HEAD | grep -q "CHANGELOG.md"; then
              echo "‚úÖ CHANGELOG.md has been updated in this PR"
              
              # Also check if there are entries in the Unreleased section
              if grep -A 20 "^## \[Unreleased\]" CHANGELOG.md | grep -q "^### "; then
                echo "‚úÖ Unreleased section contains changelog entries"
              else
                echo "‚ùå Unreleased section is empty - please add changelog entries"
                echo "   PRs to main branch must document changes in CHANGELOG.md"
                VALIDATION_FAILED=true
              fi
            else
              echo "‚ùå CHANGELOG.md has not been updated in this PR"
              echo "   All PRs to main branch must include changelog updates"
              echo "   Add entries to the [Unreleased] section describing your changes"
              VALIDATION_FAILED=true
            fi
          else
            echo "‚ÑπÔ∏è  PR targets $PR_BASE_BRANCH branch - no changelog validation needed"
          fi
          
          # Verify composer.json does NOT have hardcoded version (to prevent Packagist issues)
          if grep -q '"version"' composer.json; then
            echo "‚ùå Hardcoded version found in composer.json"
            echo "   Remove the 'version' field to prevent Packagist publishing issues"
            echo "   Versions are managed through git tags, not composer.json"
            VALIDATION_FAILED=true
          else
            echo "‚úÖ No hardcoded version in composer.json (managed by git tags)"
          fi
          
          if [ "$VALIDATION_FAILED" = true ]; then
            echo ""
            echo "üìù To fix validation issues:"
            echo "1. Ensure no 'version' field exists in composer.json"
            echo "2. Update CHANGELOG.md with your changes in the [Unreleased] section"
            echo "3. All PRs to main branch must document their changes"
            echo ""
            echo "üìö See .claude/CLAUDE.md for complete release process documentation"
          fi
          
          echo ""
          if [ "$VALIDATION_FAILED" = true ]; then
            echo "‚ùå Validation failed - please address the issues above"
            exit 1
          else
            echo "‚úÖ All validation checks passed!"
          fi