name: "Release Validation"

on:
  pull_request:
    branches: [ main ]

jobs:
  validate-release:
    name: "Validate Release Requirements"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Make build scripts executable
        run: chmod +x build/*.sh

      - name: Check release requirements
        run: |
          echo "üîç Validating release requirements..."
          echo ""
          
          VALIDATION_FAILED=false
          
          # Get version that would be generated for this branch
          CURRENT_VERSION=$(bash build/version.sh)
          
          echo "Generated version for this branch: $CURRENT_VERSION"
          echo ""
          
          # Check if this looks like a release version (not dev/alpha/beta)
          if [[ "$CURRENT_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "‚úÖ Release version format detected: $CURRENT_VERSION"
            
            # Check that CHANGELOG.md has section for this version
            if grep -q "^## \[$CURRENT_VERSION\]" CHANGELOG.md; then
              echo "‚úÖ Version section [$CURRENT_VERSION] found in CHANGELOG.md"
            else
              echo "‚ùå No version section [$CURRENT_VERSION] found in CHANGELOG.md"
              echo "   Release PRs must have a changelog section for the new version"
              VALIDATION_FAILED=true
            fi
          else
            echo "‚ÑπÔ∏è  Development version detected - no release validation needed"
          fi
          
          # Verify composer.json does NOT have hardcoded version (to prevent Packagist issues)
          if grep -q '"version"' composer.json; then
            echo "‚ùå Hardcoded version found in composer.json"
            echo "   Remove the 'version' field to prevent Packagist publishing issues"
            echo "   Versions are managed through git tags, not composer.json"
            VALIDATION_FAILED=true
          else
            echo "‚úÖ No hardcoded version in composer.json (managed by git tags)"
          fi
          
          if [ "$VALIDATION_FAILED" = true ]; then
            echo ""
            echo "üìù To prepare a release:"
            echo "1. Ensure no 'version' field exists in composer.json"
            echo "2. Add version section to CHANGELOG.md for: $CURRENT_VERSION"
            echo "3. Git tags will define the actual release version"
            echo ""
            echo "üìö See .claude/CLAUDE.md for complete release process documentation"
          fi
          
          echo ""
          if [ "$VALIDATION_FAILED" = true ]; then
            echo "‚ùå Validation failed - please address the issues above"
            exit 1
          else
            echo "‚úÖ All validation checks passed!"
          fi